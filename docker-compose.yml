version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: iagram_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: iagram
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: iagram
      MYSQL_PASSWORD: iagram123
    ports:
      - "33006:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/init:/docker-entrypoint-initdb.d
    networks:
      - iagram-network

  # Laravel Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: iagram_backend
    restart: unless-stopped
    ports:
      - "8000:80"
    environment:
      - APP_NAME=IAgram
      - APP_ENV=local
      - APP_KEY=base64:your-app-key-here
      - APP_DEBUG=true
      - APP_URL=http://localhost:8000
      - LOG_CHANNEL=stack
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=iagram
      - DB_USERNAME=iagram
      - DB_PASSWORD=iagram123
      - SESSION_DRIVER=file
      - SESSION_LIFETIME=120
      - SESSION_DOMAIN=
      - SESSION_SECURE_COOKIE=false
      - SESSION_SAME_SITE_COOKIE=none
    volumes:
      - ./backend:/var/www/html
      - backend_storage:/var/www/html/storage
    depends_on:
      - mysql
    networks:
      - iagram-network

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: iagram_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - iagram-network

volumes:
  mysql_data:
    driver: local
  backend_storage:
    driver: local

networks:
  iagram-network:
    driver: bridge